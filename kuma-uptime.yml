apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-uptime-uptime-kuma
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: kuma-uptime
      app.kubernetes.io/name: uptime-kuma
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: kuma-uptime
        app.kubernetes.io/name: uptime-kuma
      annotations:
        linkerd.io/inject: enabled
    spec:
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: kuma-uptime-uptime-kuma-pvc
      containers:
      - name: uptime-kuma
        image: louislam/uptime-kuma:1.23.11-debian
        ports:
        - name: http
          containerPort: 3001
          protocol: TCP
        env:
        - name: UPTIME_KUMA_PORT
          value: '3001'
        resources: {}
        volumeMounts:
        - name: storage
          mountPath: /app/data
        livenessProbe:
          exec:
            command:
            - extra/healthcheck
          initialDelaySeconds: 15
          timeoutSeconds: 2
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        imagePullPolicy: IfNotPresent
        securityContext: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: Recreate
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
