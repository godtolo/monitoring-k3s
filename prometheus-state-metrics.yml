apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-prometheus-1709442776-kube-state-metrics
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: kube-prometheus-1709442776
      app.kubernetes.io/name: kube-state-metrics
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: kube-prometheus-1709442776
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kube-state-metrics
        helm.sh/chart: kube-state-metrics-3.2.3
      annotations:
        linkerd.io/inject: enabled
    spec:
      containers:
      - name: kube-state-metrics
        image: marketplace.azurecr.io/bitnami/kube-state-metrics:2.6.0-debian-11-r2
        args:
        - '--resources=certificatesigningrequests'
        - '--resources=configmaps'
        - '--resources=cronjobs'
        - '--resources=daemonsets'
        - '--resources=deployments'
        - '--resources=endpoints'
        - '--resources=horizontalpodautoscalers'
        - '--resources=ingresses'
        - '--resources=jobs'
        - '--resources=limitranges'
        - '--resources=mutatingwebhookconfigurations'
        - '--resources=namespaces'
        - '--resources=networkpolicies'
        - '--resources=nodes'
        - '--resources=persistentvolumeclaims'
        - '--resources=persistentvolumes'
        - '--resources=poddisruptionbudgets'
        - '--resources=pods'
        - '--resources=replicasets'
        - '--resources=replicationcontrollers'
        - '--resources=resourcequotas'
        - '--resources=secrets'
        - '--resources=services'
        - '--resources=statefulsets'
        - '--resources=storageclasses'
        - '--resources=volumeattachments'
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources: {}
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
            scheme: HTTP
          initialDelaySeconds: 120
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 6
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 1001
          runAsNonRoot: true
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: kube-prometheus-1709442776-kube-state-metrics
      serviceAccount: kube-prometheus-1709442776-kube-state-metrics
      securityContext:
        fsGroup: 1001
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: kube-prometheus-1709442776
                  app.kubernetes.io/name: kube-state-metrics
              namespaces:
              - monitoring
              topologyKey: kubernetes.io/hostname
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
